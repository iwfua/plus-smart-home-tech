services:
  kafka:
    image: confluentinc/confluent-local:7.4.3
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092" # for client connections
      - "9101:9101" # JMX
    restart: unless-stopped
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      CLUSTER_ID: 'K0EA9p0yEe6MkAAAAkKsEg'
    volumes:
      - kafka_data:/var/lib/kafka/data

  kafka-init-topics:
    image: confluentinc/confluent-local:7.4.3
    container_name: kafka-init-topics
    depends_on:
      - kafka
    command: "bash -c \
                'kafka-topics --create --topic telemetry.sensors.v1 \
                             --partitions 1 --replication-factor 1 --if-not-exists \
                             --bootstrap-server kafka:29092 && \
                kafka-topics --create --topic telemetry.snapshots.v1 \
                             --partitions 1 --replication-factor 1 --if-not-exists \
                             --bootstrap-server kafka:29092 && \
                kafka-topics --create --topic telemetry.hubs.v1 \
                             --partitions 1 --replication-factor 1 --if-not-exists \
                             --bootstrap-server kafka:29092'"
    init: true

  analyzer-db:
    image: postgres:16.1
    container_name: postgres-shm-telemetry-analyzer-db
    ports:
      - "6541:5432"
    environment:
      - POSTGRES_PASSWORD=analyzer
      - POSTGRES_USER=analyzer
      - POSTGRES_DB=analyzer-db
    volumes:
      - analyzer_db_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  shopping-store-db:
    image: postgres:16.1
    container_name: postgres-shm-commerce-shopping-store-db
    ports:
      - "6542:5432"
    environment:
      - POSTGRES_PASSWORD=shopping-store
      - POSTGRES_USER=shopping-store
      - POSTGRES_DB=shopping-store-db
    volumes:
      - shopping_store_db_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  shopping-cart-db:
    image: postgres:16.1
    container_name: postgres-shm-commerce-shopping-cart-db
    ports:
      - "6543:5432"
    environment:
      - POSTGRES_PASSWORD=shopping-cart
      - POSTGRES_USER=shopping-cart
      - POSTGRES_DB=shopping-cart-db
    volumes:
      - shopping_cart_db_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  warehouse-db:
    image: postgres:16.1
    container_name: postgres-shm-commerce-warehouse-db
    ports:
      - "6544:5432"
    environment:
      - POSTGRES_PASSWORD=warehouse
      - POSTGRES_USER=warehouse
      - POSTGRES_DB=warehouse-db
    volumes:
      - warehouse_db_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  order-db:
    image: postgres:16.1
    container_name: postgres-shm-commerce-order-db
    ports:
      - "6545:5432"
    environment:
      - POSTGRES_PASSWORD=order
      - POSTGRES_USER=order
      - POSTGRES_DB=order-db
    volumes:
      - order_db_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  payment-db:
    image: postgres:16.1
    container_name: postgres-shm-commerce-payment-db
    ports:
      - "6546:5432"
    environment:
      - POSTGRES_PASSWORD=payment
      - POSTGRES_USER=payment
      - POSTGRES_DB=payment-db
    volumes:
      - payment_db_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  delivery-db:
    image: postgres:16.1
    container_name: postgres-shm-commerce-delivery-db
    ports:
      - "6547:5432"
    environment:
      - POSTGRES_PASSWORD=delivery
      - POSTGRES_USER=delivery
      - POSTGRES_DB=delivery-db
    volumes:
      - delivery_db_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

volumes:
  kafka_data:
  analyzer_db_data:
  shopping_store_db_data:
  shopping_cart_db_data:
  warehouse_db_data:
  order_db_data:
  payment_db_data:
  delivery_db_data: